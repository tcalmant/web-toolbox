function s(r,n){if(r==null)throw new Error("Invalid Date");const a={timeZone:n,year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit",hour12:!1},i=new Intl.DateTimeFormat("en-US",a);let o;try{o=i.formatToParts(r)}catch(e){return console.error(`Error parsing date: ${e.message}`),""}const t={};for(const e of o)t[e.type]=e.value;return`${t.year}-${t.month}-${t.day} ${t.hour}:${t.minute}:${t.second}`}function u(r){return s(r,"UTC")}function m(r,n){const a={timeZone:n,timeZoneName:"longOffset"},i=new Intl.DateTimeFormat(void 0,a);let o;try{o=i.format(r)}catch(e){return console.error(`Error computing timezone offset: ${e.message}`),""}const t=o.indexOf("UTC");return t==-1?"":o.substring(t+3)}class c{duration_s;constructor(n){this.duration_s=n}toString(){return`${Math.floor(this.duration_s/3600).toString().padStart(1,"0")}:${Math.abs(Math.floor(this.duration_s%3600/60)).toString().padStart(2,"0")}`}}export{c as T,s as a,u as d,m as f};
