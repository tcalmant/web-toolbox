function u(t,n=!1){if(t==null)throw new Error("Invalid Date");const o=t.getFullYear(),s=String(t.getMonth()+1).padStart(2,"0"),r=String(t.getDate()).padStart(2,"0"),a=String(t.getHours()).padStart(2,"0"),i=String(t.getMinutes()).padStart(2,"0"),S=String(t.getSeconds()).padStart(2,"0");let e=`${o}-${s}-${r} ${a}:${i}:${S}`;return n&&(e+=` ${g(t)}`),e}function c(t){if(t==null)throw new Error("Invalid Date");const n=t.getUTCFullYear(),o=String(t.getUTCMonth()+1).padStart(2,"0"),s=String(t.getUTCDate()).padStart(2,"0"),r=String(t.getUTCHours()).padStart(2,"0"),a=String(t.getUTCMinutes()).padStart(2,"0"),i=String(t.getSeconds()).padStart(2,"0");return`${n}-${o}-${s} ${r}:${a}:${i}`}function g(t){const n=t.getTimezoneOffset(),o=Math.abs(n/60),s=n%60;let r="";return n<0?r="+":r="-",`${r}${String(o).padStart(2,"0")}:${String(s).padStart(2,"0")}`}class f{duration_s;constructor(n){this.duration_s=n}toString(){return`${Math.floor(this.duration_s/3600).toString().padStart(1,"0")}:${Math.abs(Math.floor(this.duration_s%3600/60)).toString().padStart(2,"0")}`}}export{f as T,u as a,c as d,g as f};
